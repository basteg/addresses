@using Addresses.Models
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using X.PagedList;
@using X.PagedList.Mvc.Core;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@inject IViewLocalizer Localizer

@model IndexViewModel

@addTagHelper "*, Addresses"

@{
    ViewData["Title"] = "Список адресов";
}

<!-- import the included stylesheet for some (very basic) default styling -->
<link href="/Content/PagedList.css" rel="stylesheet" type="text/css" />


<div style="text-align:center">
    <form method="get">
        <div class="form-inline">
            <table class="table text-center">
                <tr style="vertical-align:middle;text-align:center">
                    <th>
                        <sort-header up="@Model.SortViewModel.Up" current="@Model.SortViewModel.Current" property="@Model.SortViewModel.CountrySort">
                            <a asp-action="Index"
                               asp-route-sortState="@Model.SortViewModel.CountrySort"
                                              asp-route-countryFilter="@(Model.FilterViewModel.SelectedCountry)"
                               asp-route-cityFilter="@(Model.FilterViewModel.SelectedCity)"
                               asp-route-streetFilter="@(Model.FilterViewModel.SelectedStreet)"
                               asp-route-houseNumberFilter="@(Model.FilterViewModel.SelectedHouseNumber)"
                               asp-route-zipCodeFilter="@(Model.FilterViewModel.SelectedZipCode)"
                               asp-route-creationDataTimeFilter="@(Model.FilterViewModel.SelectedCreationDateTime)">@Localizer["Country"]</a>
                        </sort-header>
                    </th>
                    <th>
                        <sort-header up="@Model.SortViewModel.Up" current="@Model.SortViewModel.Current" property="@Model.SortViewModel.CitySort">
                            <a asp-action="Index"
                               asp-route-sortState="@Model.SortViewModel.CitySort"
                               asp-route-countryFilter="@(Model.FilterViewModel.SelectedCountry)"
                               asp-route-cityFilter="@(Model.FilterViewModel.SelectedCity)"
                               asp-route-streetFilter="@(Model.FilterViewModel.SelectedStreet)"
                               asp-route-houseNumberFilter="@(Model.FilterViewModel.SelectedHouseNumber)"
                               asp-route-zipCodeFilter="@(Model.FilterViewModel.SelectedZipCode)"
                               asp-route-creationDataTimeFilter="@(Model.FilterViewModel.SelectedCreationDateTime)">@Localizer["City"]</a>
                        </sort-header>
                    </th>
                    <th>
                        <sort-header up="@Model.SortViewModel.Up" current="@Model.SortViewModel.Current" property="@Model.SortViewModel.StreetSort">
                            <a asp-action="Index"
                               asp-route-sortState="@Model.SortViewModel.StreetSort"
                               asp-route-countryFilter="@(Model.FilterViewModel.SelectedCountry)"
                               asp-route-cityFilter="@(Model.FilterViewModel.SelectedCity)"
                               asp-route-streetFilter="@(Model.FilterViewModel.SelectedStreet)"
                               asp-route-houseNumberFilter="@(Model.FilterViewModel.SelectedHouseNumber)"
                               asp-route-zipCodeFilter="@(Model.FilterViewModel.SelectedZipCode)"
                               asp-route-creationDataTimeFilter="@(Model.FilterViewModel.SelectedCreationDateTime)">@Localizer["Street"]</a>
                        </sort-header>
                    </th>
                    <th>
                        <sort-header up="@Model.SortViewModel.Up" current="@Model.SortViewModel.Current" property="@Model.SortViewModel.HouseNumberSort">
                            <a asp-action="Index"
                               asp-route-sortState="@Model.SortViewModel.HouseNumberSort"
                               asp-route-countryFilter="@(Model.FilterViewModel.SelectedCountry)"
                               asp-route-cityFilter="@(Model.FilterViewModel.SelectedCity)"
                               asp-route-streetFilter="@(Model.FilterViewModel.SelectedStreet)"
                               asp-route-houseNumberFilter="@(Model.FilterViewModel.SelectedHouseNumber)"
                               asp-route-zipCodeFilter="@(Model.FilterViewModel.SelectedZipCode)"
                               asp-route-creationDataTimeFilter="@(Model.FilterViewModel.SelectedCreationDateTime)">@Localizer["HouseNumber"]</a>
                        </sort-header>
                    </th>
                    <th>
                        <sort-header up="@Model.SortViewModel.Up" current="@Model.SortViewModel.Current" property="@Model.SortViewModel.ZipCodeSort">
                            <a asp-action="Index"
                               asp-route-sortState="@Model.SortViewModel.ZipCodeSort"
                               asp-route-countryFilter="@(Model.FilterViewModel.SelectedCountry)"
                               asp-route-cityFilter="@(Model.FilterViewModel.SelectedCity)"
                               asp-route-streetFilter="@(Model.FilterViewModel.SelectedStreet)"
                               asp-route-houseNumberFilter="@(Model.FilterViewModel.SelectedHouseNumber)"
                               asp-route-zipCodeFilter="@(Model.FilterViewModel.SelectedZipCode)"
                               asp-route-creationDataTimeFilter="@(Model.FilterViewModel.SelectedCreationDateTime)">@Localizer["ZipCode"]</a>
                        </sort-header>
                    </th>
                    <th>
                        <sort-header up="@Model.SortViewModel.Up" current="@Model.SortViewModel.Current" property="@Model.SortViewModel.CreationDateTimeSort">
                            <a asp-action="Index"
                               asp-route-sortState="@Model.SortViewModel.CreationDateTimeSort"
                               asp-route-countryFilter="@(Model.FilterViewModel.SelectedCountry)"
                               asp-route-cityFilter="@(Model.FilterViewModel.SelectedCity)"
                               asp-route-streetFilter="@(Model.FilterViewModel.SelectedStreet)"
                               asp-route-houseNumberFilter="@(Model.FilterViewModel.SelectedHouseNumber)"
                               asp-route-zipCodeFilter="@(Model.FilterViewModel.SelectedZipCode)"
                               asp-route-creationDataTimeFilter="@(Model.FilterViewModel.SelectedCreationDateTime)">@Localizer["CreationDateTime"]</a>
                        </sort-header>
                    </th>
                    <th>
                    <a a asp-action="Index"
   asp-route-page="@(Model.PageViewModel.PageNumber=1)"
   asp-route-countryFilter="@(Model.NoFilterViewModel.SelectedCountry)"
   asp-route-cityFilter="@(Model.NoFilterViewModel.SelectedCity)"
   asp-route-streetFilter="@(Model.NoFilterViewModel.SelectedStreet)"
   asp-route-houseNumberFilter="@(Model.NoFilterViewModel.SelectedHouseNumber)"
   asp-route-zipCodeFilter="@(Model.NoFilterViewModel.SelectedZipCode)"
   asp-route-creationDateTimeFilter="@(Model.NoFilterViewModel.SelectedCreationDateTime)"
   asp-route-sortState="@(Model.SortViewModel.NoSort)"
   class="btn btn-default btn">
    @Localizer["Refresh"]
    <i class="glyphicon glyphicon-refresh"></i>
</a></th>
                </tr>
                <tr>
                    <td>@Html.TextBox("countryFilter", Model.FilterViewModel.SelectedCountry, htmlAttributes: new { @class = "form-control" })</td>
                    <td>@Html.TextBox("cityFilter", Model.FilterViewModel.SelectedCity, htmlAttributes: new { @class = "form-control" })</td>
                    <td>@Html.TextBox("streetFilter", Model.FilterViewModel.SelectedStreet, htmlAttributes: new { @class = "form-control" })</td>
                    <td>@Html.TextBox("houseNumberFilter", Model.FilterViewModel.SelectedHouseNumber, htmlAttributes: new { @class = "form-control" })</td>
                    <td>@Html.TextBox("zipCodeFilter", Model.FilterViewModel.SelectedZipCode, htmlAttributes: new { @class = "form-control" })</td>
                    <td>@Html.TextBox("creationDataTimeFilter", Model.FilterViewModel.SelectedCreationDateTime, htmlAttributes: new { @class = "form-control" })</td>
                    <td><input type="submit" value=@Localizer["Find"] class="btn btn-default" /></td>                
                </tr>


        @foreach (var address in Model.Addresses)
        {
            <tr>
                <td><p style=@Model.FilterViewModel.StyleTextCountry> @address.Country</p></td>
                <td><p style=@Model.FilterViewModel.StyleTextCity>@address.City</p></td>
                <td><p style=@Model.FilterViewModel.StyleTextStreet>@address.Street</p></td>
                <td><p style=@Model.FilterViewModel.StyleTextHouseNumber>@address.HouseNumber</p></td>
                <td><p style=@Model.FilterViewModel.StyleTextZipCode>@address.ZipCode</p></td>
                <td><p style=@Model.FilterViewModel.StyleTextCreationDateTime>@address.CreationDateTime</p></td>
            </tr>
        }
    </table>
            
            </div>
</form>
</div>



@Html.PagedListPager((IPagedList)Model.Addresses,
                       page => Url.Action("Index",
                            new { page = page,
                                countryFilter = @Model.FilterViewModel.SelectedCountry,
                                cityFilter = @Model.FilterViewModel.SelectedCity,
                                streetFilter = @Model.FilterViewModel.SelectedStreet,
                                houseNumberFilter = @Model.FilterViewModel.SelectedHouseNumber,
                                zipCodeFilter = @Model.FilterViewModel.SelectedZipCode,
                                creationDateTimeFilter = @Model.FilterViewModel.SelectedCreationDateTime,
                                sortState = @Model.SortViewModel.Name
                            }))

@if (Context.Features.Get<IRequestCultureFeature>().RequestCulture.UICulture.Name == "ru")
{
    @section Scripts {
        <script type="text/javascript">
            $(function () {
                $('input[name="creationDataTimeFilter"]').daterangepicker({
                    "autoUpdateInput": false,
                    "locale": {
                        "format": "DD.MM.YYYY",
                        "separator": " - ",
                        "applyLabel": "Выбрать",
                        "cancelLabel": "Отменить",
                        "fromLabel": "С",
                        "toLabel": "По",
                        "customRangeLabel": "Пользовательский",
                        "weekLabel": "Н",
                        "daysOfWeek":
                        ["Пн",
                            "Вт",
                            "Ср",
                            "Чт",
                            "пт",
                            "Сб",
                            "Вс"],
                        "monthNames":
                        ["Январь",
                            "Февраль",
                            "Март",
                            "Апрель",
                            "Май",
                            "Июнь",
                            "Июль",
                            "Август",
                            "Сентябрь",
                            "Октябрь",
                            "Ноябрь",
                            "Декабрь"],
                        "firstDay": 1
                    },
                    "opens": "left"
                });

                $('input[name="creationDataTimeFilter"]').on('apply.daterangepicker', function (ev, picker) {
                    $(this).val(picker.startDate.format('DD.MM.YYYY') + ' - ' + picker.endDate.format('DD.MM.YYYY'));
                });

                $('input[name="creationDataTimeFilter"]').on('cancel.daterangepicker', function (ev, picker) {
                    $(this).val('');
                });
            });
        </script>
    }
}
else
{
    @section Scripts {
        <script type="text/javascript">
            $(function () {
                $('input[name="creationDataTimeFilter"]').daterangepicker({
                    "autoUpdateInput": false,
                    "opens": "left"
                });

                $('input[name="creationDataTimeFilter"]').on('apply.daterangepicker', function (ev, picker) {
                    $(this).val(picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY'));
                });

                $('input[name="creationDataTimeFilter"]').on('cancel.daterangepicker', function (ev, picker) {
                    $(this).val('');
                });
            });
        </script>
    }
}